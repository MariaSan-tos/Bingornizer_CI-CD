name: CI

on: [pull_request, push]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: reports/perf.html


      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Wait for MySQL
        run: |
          echo "Aguardando MySQL iniciar..."
          sleep 20

      - name: Run Sequelize migrations and seeds
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASS: root
          DB_NAME: db
        run: |
          npx sequelize db:create
          npx sequelize db:migrate
          npx sequelize db:seed:all

      - name: Run Jest tests
        continue-on-error: true
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASS: root
          DB_NAME: db
        run: npm test

      - name: Upload HTML Jest Report
        uses: actions/upload-artifact@v4
        with:
          name: jest-report
          path: html-report/report.html


      - name: Start app in background
        run: npm start &
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASS: root
          DB_NAME: db
          SESSION_SECRET: root

      - name: Wait for app to be ready
        run: npx wait-on http://localhost:3000

      - name: Run Cypress tests
        continue-on-error: true
        run: npm run cypress:run

      - name: Run Performance Test with Artillery
        run: npm run load:test

      - name: Run npm audit for vulnerability scan
        run: npm audit --audit-level=high

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun --collect.staticDistDir=public

      - name: Run Performance Test
        run: npm run test:perf

      - name: Run Soak Test
        run: npm run test:soak

      - name: Run Stress Test
        run: npm run test:stress

      - name: Run Authenticated Performance Test
        run: npm run test:auth

      - name: Run Authenticated POST Cartela Test
        run: npm run test:auth:post

      - name: Generate Performance HTML Report
        run: npm run report:perf

